---
- name: bootstrap debian k3s vagrant boxes
  hosts: all, localhost
  become: true
  vars_files:
  - vars.yml

  tasks:
  - name: populate /etc/hosts file for control and nodes
    lineinfile:
      path: /etc/hosts
      state: present
      line: "{{item}}"
    with_items:
    - "192.168.33.33\tkubernetes.local"
    - "192.168.33.34\tkubernetes1.local"
    - "192.168.33.35\tkubernetes2.local"
    - "192.168.33.36\tkubernetes3.local"

  - name: retrieve k3s binary
    get_url:
      url: https://github.com/rancher/k3s/releases/download/v{{k3svers}}/k3s
      dest: /usr/bin/k3s

  - name: make k3s binary executable
    file:
      path: /usr/bin/k3s
      state: file
      mode: 0755

  - name: tasks for control/master node
    block:
    - name: initialize k3s to setup kubernetes control plane
      command: nohup k3s server &
      args:
        creates: /etc/rancher/k3s/k3s.yaml

    - name: download helm tarball and unpack helm
      unarchive:
        src: https://storage.googleapis.com/kubernetes-helm/helm-v{{helm_version}}-{{ansible_system | lower}}-amd64.tar.gz
        dest: /usr/bin/
        remote_src: true
        extra_opts:
        - '--strip-components'
        - '1'
        - "{{ansible_system | lower}}-amd64/helm"

    #- name: initialize helm and install tiller
    #  command: helm init

    - name: capture node token and kubeconfig
      command: cat {{item}}
      register: "{{item | basename}}_contents"
      with_items:
      - /var/lib/rancher/k3s/server/node-token
      - /etc/rancher/k3s/k3s.yaml

    - name: display kubeconfig
      debug:
        var: k3s.yaml_contents.stdout
    when: inventory_hostname == control

  - name: join kubernetes work node to control/master
    command: nohup k3s agent --server https://kubernetes.local:6443 --token {{node-token_contents.stdout}} &
